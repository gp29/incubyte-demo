{"ast":null,"code":"var _jsxFileName = \"/Users/gaurav/Desktop/gitprojects/incubyte-demo/src/views/App.js\";\nimport React, { Component } from 'react';\nimport '../App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass StringCalculator extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showResult: false,\n      sumArr: []\n    };\n    this.callCount = 0;\n  }\n  componentDidMount() {\n    this.add(\"\");\n    this.add(\"1\");\n    this.add(\"1,2\");\n    this.add(\"1,2,3,4,5\");\n    this.add(\"1\\n2,3\");\n    this.add(\"//;\\n1;2\");\n    this.add(\"1\\n2,-3,-4\");\n    this.add(\"1\\n2,1001,1002\");\n    this.add(\"//[***]\\n1***2***3\");\n    this.add(\"//[*][%]\\n1*2%3\");\n    this.add(\"//[**][%%]\\n1**2%%3\");\n  }\n  add(input) {\n    this.callCount++;\n    let sumArr = this.state.sumArr;\n    let sumValue = 0;\n    let textValue = input;\n    if (textValue) {\n      let delimiter = /,|\\n|;/;\n      const match = textValue.match(/^\\/\\/(\\[.*\\])[\\n](.*)/);\n      if (match) {\n        textValue = match[2];\n        const delimiterVal = match[1];\n        const delimiters = delimiterVal.match(/\\[(.*?)\\]/g).map(d => d.slice(1, -1));\n        delimiter = new RegExp(delimiters.map(d => d.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&')).join('|'));\n      }\n      let numArray = textValue.split(delimiter).map(num => parseFloat(num) || 0);\n      const negatives = numArray.filter(num => num < 0);\n      if (negatives.length) {\n        sumValue = `Negative numbers not allowed: ${negatives.join(\", \")}`;\n        // alert(`Negative numbers not allowed: ${negatives.join(\", \")}`);\n        // return;\n      } else {\n        numArray = numArray.filter(x => x < 1000);\n        sumValue = numArray.reduce((sum, num) => sum + num, 0);\n      }\n    }\n    sumArr.push({\n      input,\n      sum: sumValue\n    });\n    this.setState({\n      sumArr,\n      showResult: true\n    });\n  }\n  render() {\n    console.log(this.callCount);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"App-header\",\n        children: this.state.showResult ? this.state.sumArr.map((e, key) => {\n          return /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Sum of \\\"\", e.input, \"\\\" is: \", e.sum]\n          }, key, true, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 32\n          }, this);\n        }) : null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this);\n  }\n}\nexport default StringCalculator;","map":{"version":3,"names":["React","Component","jsxDEV","_jsxDEV","StringCalculator","constructor","props","state","showResult","sumArr","callCount","componentDidMount","add","input","sumValue","textValue","delimiter","match","delimiterVal","delimiters","map","d","slice","RegExp","replace","join","numArray","split","num","parseFloat","negatives","filter","length","x","reduce","sum","push","setState","render","console","log","className","children","e","key","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/Users/gaurav/Desktop/gitprojects/incubyte-demo/src/views/App.js"],"sourcesContent":["import React, {Component} from 'react';\nimport '../App.css';\n\nclass StringCalculator extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            showResult:false,\n            sumArr: []\n        }\n        this.callCount = 0;\n    }\n\n    componentDidMount(){\n        this.add(\"\")\n        this.add(\"1\")\n        this.add(\"1,2\")\n        this.add(\"1,2,3,4,5\")\n        this.add(\"1\\n2,3\")\n        this.add(\"//;\\n1;2\")\n        this.add(\"1\\n2,-3,-4\")\n        this.add(\"1\\n2,1001,1002\")\n        this.add(\"//[***]\\n1***2***3\")\n        this.add(\"//[*][%]\\n1*2%3\")\n        this.add(\"//[**][%%]\\n1**2%%3\")\n    }\n\n    add(input){\n        this.callCount++;\n        let sumArr = this.state.sumArr\n        let sumValue = 0\n        let textValue = input\n        if(textValue){\n            let delimiter = /,|\\n|;/;\n            const match = textValue.match(/^\\/\\/(\\[.*\\])[\\n](.*)/);\n            if(match){\n                textValue = match[2];\n\n                const delimiterVal = match[1];\n                const delimiters = delimiterVal.match(/\\[(.*?)\\]/g).map(d => d.slice(1, -1));\n                delimiter = new RegExp(delimiters.map(d => d.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&')).join('|'));\n            }\n            let numArray = textValue.split(delimiter).map(num => parseFloat(num) || 0);\n            const negatives = numArray.filter(num => num < 0);\n            if (negatives.length) {\n                sumValue = `Negative numbers not allowed: ${negatives.join(\", \")}`\n                // alert(`Negative numbers not allowed: ${negatives.join(\", \")}`);\n                // return;\n            }\n            else{\n                numArray = numArray.filter((x) => x < 1000)\n                sumValue = numArray.reduce((sum, num) => sum + num, 0);\n            }\n        }\n        sumArr.push({input, sum: sumValue})\n        this.setState({sumArr, showResult: true})    \n    }\n\n    render() {\n        console.log(this.callCount)\n      return (\n        <div className=\"App\">\n            <header className=\"App-header\">\n                {\n                    this.state.showResult ? \n                    this.state.sumArr.map((e, key) => {\n                        return <p key={key}>Sum of \"{e.input}\" is: {e.sum}</p> ;\n                    })\n                    : null\n                }\n            </header>\n        </div>\n      );\n    }\n}\n\nexport default StringCalculator;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}