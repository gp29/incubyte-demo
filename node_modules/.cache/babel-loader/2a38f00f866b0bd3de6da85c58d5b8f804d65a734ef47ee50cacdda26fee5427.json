{"ast":null,"code":"var _jsxFileName = \"/Users/gaurav/Desktop/gitprojects/incubyte-demo/src/views/App.js\";\nimport React, { Component } from 'react';\nimport '../App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass StringCalculator extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showResult: false,\n      sumValue: '',\n      textValue: \"\"\n    };\n  }\n  add() {\n    let sumValue = 0;\n    let textValue = this.state.textValue;\n    if (!textValue) {\n      sumValue = 0;\n    }\n    textValue = textValue.replace('\\n', '');\n    console.log(textValue.includes(\"/n\"));\n    console.log(textValue);\n    textValue = '//[**][%%]\\n1**2%%3';\n    console.log(textValue);\n    // let delimiter = /[/n,;]+/\n    // const match = textValue.match(/^\\/\\/(\\[.*\\])[\\n](.*)/);\n    // if(match){\n    //     console.log(\"in if\")\n    //     textValue = match[2];\n\n    //     const delimiterPart = match[1];\n    //     const delimiters = delimiterPart.match(/\\[(.*?)\\]/g).map(d => d.slice(1, -1));\n    //     delimiter = new RegExp(delimiters.map(d => d.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&')).join('|'));\n    //     console.log(delimiter)\n    // }\n    // let numArray = textValue.split(delimiter).map(num => parseFloat(num) || 0);\n    // const negatives = numArray.filter(num => num < 0);\n    // if (negatives.length) {\n    //     alert(`Negative numbers not allowed: ${negatives.join(\", \")}`);\n    //     return;\n    // }\n    // numArray = numArray.filter((x) => x < 1000)\n    // sumValue = numArray.reduce((sum, num) => sum + num, 0);\n    // this.setState({sumValue, showResult: true})    \n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"App-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Type your string..\",\n          value: this.state.textValue,\n          onChange: e => this.setState({\n            textValue: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          onClick: this.add.bind(this),\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 17\n        }, this), this.state.showResult ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Sum is: \", this.state.sumValue]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this);\n  }\n}\nexport default StringCalculator;","map":{"version":3,"names":["React","Component","jsxDEV","_jsxDEV","StringCalculator","constructor","props","state","showResult","sumValue","textValue","add","replace","console","log","includes","render","className","children","type","placeholder","value","onChange","e","setState","target","fileName","_jsxFileName","lineNumber","columnNumber","onClick","bind"],"sources":["/Users/gaurav/Desktop/gitprojects/incubyte-demo/src/views/App.js"],"sourcesContent":["import React, {Component} from 'react';\nimport '../App.css';\n\nclass StringCalculator extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            showResult:false,\n            sumValue: '',\n            textValue: \"\"\n        }\n    }\n\n    add(){\n        let sumValue = 0\n        let textValue = this.state.textValue\n        if(!textValue){\n            sumValue = 0\n        }\n        textValue = textValue.replace('\\n', '');\n        console.log(textValue.includes(\"/n\"))\n        console.log(textValue)\n        textValue = '//[**][%%]\\n1**2%%3'\n        console.log(textValue)\n        // let delimiter = /[/n,;]+/\n        // const match = textValue.match(/^\\/\\/(\\[.*\\])[\\n](.*)/);\n        // if(match){\n        //     console.log(\"in if\")\n        //     textValue = match[2];\n\n        //     const delimiterPart = match[1];\n        //     const delimiters = delimiterPart.match(/\\[(.*?)\\]/g).map(d => d.slice(1, -1));\n        //     delimiter = new RegExp(delimiters.map(d => d.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&')).join('|'));\n        //     console.log(delimiter)\n        // }\n        // let numArray = textValue.split(delimiter).map(num => parseFloat(num) || 0);\n        // const negatives = numArray.filter(num => num < 0);\n        // if (negatives.length) {\n        //     alert(`Negative numbers not allowed: ${negatives.join(\", \")}`);\n        //     return;\n        // }\n        // numArray = numArray.filter((x) => x < 1000)\n        // sumValue = numArray.reduce((sum, num) => sum + num, 0);\n        // this.setState({sumValue, showResult: true})    \n    }\n\n    render() {\n      return (\n        <div className=\"App\">\n            <header className=\"App-header\">\n                <input type=\"text\" placeholder=\"Type your string..\" value={this.state.textValue} onChange={(e)=> this.setState({textValue: e.target.value})} />\n                <button type=\"submit\" onClick={this.add.bind(this)}>Submit</button>\n                {\n                    this.state.showResult ? \n                    <p>Sum is: {this.state.sumValue}</p> : null\n                }\n            </header>\n        </div>\n      );\n    }\n}\n\nexport default StringCalculator;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAGC,SAAS,QAAO,OAAO;AACtC,OAAO,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpB,MAAMC,gBAAgB,SAASH,SAAS,CAAC;EACrCI,WAAWA,CAACC,KAAK,EAAC;IACd,KAAK,CAACA,KAAK,CAAC;IACZ,IAAI,CAACC,KAAK,GAAG;MACTC,UAAU,EAAC,KAAK;MAChBC,QAAQ,EAAE,EAAE;MACZC,SAAS,EAAE;IACf,CAAC;EACL;EAEAC,GAAGA,CAAA,EAAE;IACD,IAAIF,QAAQ,GAAG,CAAC;IAChB,IAAIC,SAAS,GAAG,IAAI,CAACH,KAAK,CAACG,SAAS;IACpC,IAAG,CAACA,SAAS,EAAC;MACVD,QAAQ,GAAG,CAAC;IAChB;IACAC,SAAS,GAAGA,SAAS,CAACE,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC;IACvCC,OAAO,CAACC,GAAG,CAACJ,SAAS,CAACK,QAAQ,CAAC,IAAI,CAAC,CAAC;IACrCF,OAAO,CAACC,GAAG,CAACJ,SAAS,CAAC;IACtBA,SAAS,GAAG,qBAAqB;IACjCG,OAAO,CAACC,GAAG,CAACJ,SAAS,CAAC;IACtB;IACA;IACA;IACA;IACA;;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;EACJ;EAEAM,MAAMA,CAAA,EAAG;IACP,oBACEb,OAAA;MAAKc,SAAS,EAAC,KAAK;MAAAC,QAAA,eAChBf,OAAA;QAAQc,SAAS,EAAC,YAAY;QAAAC,QAAA,gBAC1Bf,OAAA;UAAOgB,IAAI,EAAC,MAAM;UAACC,WAAW,EAAC,oBAAoB;UAACC,KAAK,EAAE,IAAI,CAACd,KAAK,CAACG,SAAU;UAACY,QAAQ,EAAGC,CAAC,IAAI,IAAI,CAACC,QAAQ,CAAC;YAACd,SAAS,EAAEa,CAAC,CAACE,MAAM,CAACJ;UAAK,CAAC;QAAE;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAC/I1B,OAAA;UAAQgB,IAAI,EAAC,QAAQ;UAACW,OAAO,EAAE,IAAI,CAACnB,GAAG,CAACoB,IAAI,CAAC,IAAI,CAAE;UAAAb,QAAA,EAAC;QAAM;UAAAQ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,EAE/D,IAAI,CAACtB,KAAK,CAACC,UAAU,gBACrBL,OAAA;UAAAe,QAAA,GAAG,UAAQ,EAAC,IAAI,CAACX,KAAK,CAACE,QAAQ;QAAA;UAAAiB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,GAAG,IAAI;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAE3C;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACR,CAAC;EAEV;AACJ;AAEA,eAAezB,gBAAgB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}