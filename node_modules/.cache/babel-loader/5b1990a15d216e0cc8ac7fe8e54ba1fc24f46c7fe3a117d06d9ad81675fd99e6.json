{"ast":null,"code":"var _jsxFileName = \"/Users/gaurav/Desktop/gitprojects/incubyte-demo/src/views/App.js\";\nimport React, { Component } from 'react';\nimport '../App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass StringCalculator extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showResult: false,\n      sumValue: '',\n      textValue: ''\n    };\n  }\n  add() {\n    let sumValue = 0;\n    let textValue = this.state.textValue;\n    if (!textValue) {\n      sumValue = 0;\n    }\n    let delimiter = /[/n,]+/;\n    const match = textValue.match(/^\\/\\/([^\\n]+)[/n](.*)$/);\n    console.log(match);\n    if (match) {\n      const delimiters = match[1].match(/\\[(.*?)\\]/g).map(d => d.slice(1, -1));\n\n      // Convert to a regex pattern\n      delimiter = new RegExp(delimiters.map(d => d.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&')).join('|'));\n\n      // let customDelimiter = match[1].replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n      // delimiter = new RegExp(customDelimiter);\n      console.log(delimiter);\n      textValue = match[2];\n    }\n    console.log(textValue.split(delimiter));\n    const numArray = textValue.split(delimiter).map(num => parseFloat(num) || 0);\n    sumValue = numArray.reduce((sum, num) => sum + num, 0);\n    this.setState({\n      sumValue,\n      showResult: true\n    });\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"App-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Type your string..\",\n          value: this.state.textValue,\n          onChange: e => this.setState({\n            textValue: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          onClick: this.add.bind(this),\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 17\n        }, this), this.state.showResult ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Sum is: \", this.state.sumValue]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this);\n  }\n}\nexport default StringCalculator;","map":{"version":3,"names":["React","Component","jsxDEV","_jsxDEV","StringCalculator","constructor","props","state","showResult","sumValue","textValue","add","delimiter","match","console","log","delimiters","map","d","slice","RegExp","replace","join","split","numArray","num","parseFloat","reduce","sum","setState","render","className","children","type","placeholder","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","onClick","bind"],"sources":["/Users/gaurav/Desktop/gitprojects/incubyte-demo/src/views/App.js"],"sourcesContent":["import React, {Component} from 'react';\nimport '../App.css';\n\nclass StringCalculator extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            showResult:false,\n            sumValue: '',\n            textValue: ''\n        }\n    }\n\n    add(){\n        let sumValue = 0\n        let textValue = this.state.textValue\n        if(!textValue){\n            sumValue = 0\n        }\n        let delimiter = /[/n,]+/\n        const match = textValue.match(/^\\/\\/([^\\n]+)[/n](.*)$/);\n        console.log(match)\n        if (match) {\n            const delimiters = match[1].match(/\\[(.*?)\\]/g).map(d => d.slice(1, -1));\n        \n            // Convert to a regex pattern\n            delimiter = new RegExp(delimiters.map(d => d.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&')).join('|'));\n        \n            // let customDelimiter = match[1].replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n            // delimiter = new RegExp(customDelimiter);\n            console.log(delimiter)\n            textValue = match[2];\n        }\n        console.log(textValue.split(delimiter))\n        const numArray = textValue.split(delimiter).map(num => parseFloat(num) || 0);\n        sumValue = numArray.reduce((sum, num) => sum + num, 0);\n        this.setState({sumValue, showResult: true})    \n    }\n\n    render() {\n      return (\n        <div className=\"App\">\n            <header className=\"App-header\">\n                <input type=\"text\" placeholder=\"Type your string..\" value={this.state.textValue} onChange={(e)=> this.setState({textValue: e.target.value})} />\n                <button type=\"submit\" onClick={this.add.bind(this)}>Submit</button>\n                {\n                    this.state.showResult ? \n                    <p>Sum is: {this.state.sumValue}</p> : null\n                }\n            </header>\n        </div>\n      );\n    }\n}\n\nexport default StringCalculator;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}