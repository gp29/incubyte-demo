{"ast":null,"code":"var _jsxFileName = \"/Users/gaurav/Desktop/gitprojects/incubyte-demo/src/views/App.js\";\nimport React, { Component } from 'react';\nimport '../App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass StringCalculator extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showResult: false,\n      sumValue: '',\n      textValue: \"\"\n    };\n  }\n  add() {\n    let sumValue = 0;\n    let textValue = this.state.textValue;\n    if (!textValue) {\n      sumValue = 0;\n    }\n    let delimiter = /[/n,;]+/;\n    let texts = textValue.split([/[/n]+/]);\n    console.log(texts);\n    texts.forEach(function (input, index) {\n      const match = input.match(/^\\/\\/(\\[.*\\])[\\n](.*)/);\n      if (match) {\n        console.log(\"in if\");\n        input = match[2];\n        const delimiterPart = match[1];\n        const delimiters = delimiterPart.match(/\\[(.*?)\\]/g).map(d => d.slice(1, -1));\n        delimiter = new RegExp(delimiters.map(d => d.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&')).join('|'));\n        console.log(delimiter);\n      }\n      let numArray = input.split(delimiter).map(num => parseFloat(num) || 0);\n      const negatives = numArray.filter(num => num < 0);\n      if (negatives.length) {\n        alert(`Negative numbers not allowed: ${negatives.join(\", \")}`);\n        return;\n      }\n      numArray = numArray.filter(x => x < 1000);\n      sumValue += numArray.reduce((sum, num) => sum + num, 0);\n    });\n    this.setState({\n      sumValue,\n      showResult: true\n    });\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"App-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Type your string..\",\n          value: this.state.textValue,\n          onChange: e => this.setState({\n            textValue: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          onClick: this.add.bind(this),\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 17\n        }, this), this.state.showResult ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Sum is: \", this.state.sumValue]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this);\n  }\n}\nexport default StringCalculator;","map":{"version":3,"names":["React","Component","jsxDEV","_jsxDEV","StringCalculator","constructor","props","state","showResult","sumValue","textValue","add","delimiter","texts","split","console","log","forEach","input","index","match","delimiterPart","delimiters","map","d","slice","RegExp","replace","join","numArray","num","parseFloat","negatives","filter","length","alert","x","reduce","sum","setState","render","className","children","type","placeholder","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","onClick","bind"],"sources":["/Users/gaurav/Desktop/gitprojects/incubyte-demo/src/views/App.js"],"sourcesContent":["import React, {Component} from 'react';\nimport '../App.css';\n\nclass StringCalculator extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            showResult:false,\n            sumValue: '',\n            textValue: \"\"\n        }\n    }\n\n    add(){\n        let sumValue = 0\n        let textValue = this.state.textValue\n        if(!textValue){\n            sumValue = 0\n        }\n        let delimiter = /[/n,;]+/\n        let texts = textValue.split([/[/n]+/])\n        console.log(texts)\n        texts.forEach(function (input, index) {\n            const match = input.match(/^\\/\\/(\\[.*\\])[\\n](.*)/);\n            if(match){\n                console.log(\"in if\")\n                input = match[2];\n\n                const delimiterPart = match[1];\n                const delimiters = delimiterPart.match(/\\[(.*?)\\]/g).map(d => d.slice(1, -1));\n                delimiter = new RegExp(delimiters.map(d => d.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&')).join('|'));\n                console.log(delimiter)\n            }\n            let numArray = input.split(delimiter).map(num => parseFloat(num) || 0);\n            const negatives = numArray.filter(num => num < 0);\n            if (negatives.length) {\n                alert(`Negative numbers not allowed: ${negatives.join(\", \")}`);\n                return;\n            }\n            numArray = numArray.filter((x) => x < 1000)\n            sumValue += numArray.reduce((sum, num) => sum + num, 0);\n        });\n        this.setState({sumValue, showResult: true})    \n    }\n\n    render() {\n      return (\n        <div className=\"App\">\n            <header className=\"App-header\">\n                <input type=\"text\" placeholder=\"Type your string..\" value={this.state.textValue} onChange={(e)=> this.setState({textValue: e.target.value})} />\n                <button type=\"submit\" onClick={this.add.bind(this)}>Submit</button>\n                {\n                    this.state.showResult ? \n                    <p>Sum is: {this.state.sumValue}</p> : null\n                }\n            </header>\n        </div>\n      );\n    }\n}\n\nexport default StringCalculator;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}